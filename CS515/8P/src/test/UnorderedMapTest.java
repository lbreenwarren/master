import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.extension.ExtendWith;

import java.util.Map;
import java.util.Set;
import java.util.TreeSet;
import java.util.HashMap;

/**
 * New tests for Java
 */
public class UnorderedMapTest {

    @Test
    void maptest0() {
        UnorderedMap<String, Integer> m = new UnorderedMap<>();
        m.put("a", 1);
        m.put("b", 2);
        m.erase("a");

        assertTrue(m.put("key1", 1));
        assertTrue(m.put("key2", 2));
        assertTrue(m.put("key3", 3));
        assertTrue(m.put("key4", 4));
        assertTrue(m.put("key5", 5));
        assertTrue(m.put("key6", 6));
        assertTrue(m.put("key7", 7));
        assertTrue(m.put("key8", 8));
        assertTrue(m.put("key9", 9));
        assertTrue(m.put("key10", 10));
        assertTrue(m.put("key11", 11));
        assertTrue(m.put("key12", 12));
        assertTrue(m.put("key13", 13));
        assertTrue(m.put("key14", 14));
        assertTrue(m.put("key15", 15));
        assertTrue(m.put("key16", 16));
        assertTrue(m.put("key17", 17));
        assertTrue(m.put("key18", 18));
        assertTrue(m.put("key19", 19));
        assertTrue(m.put("key20", 20));
        assertTrue(m.put("key21", 21));
        assertTrue(m.put("key22", 22));
        assertTrue(m.put("key23", 23));
        assertTrue(m.put("key24", 24));
        assertTrue(m.put("key25", 25));
        assertTrue(m.put("key26", 26));
        assertTrue(m.put("key27", 27));
        assertTrue(m.put("key28", 28));
        assertTrue(m.put("key29", 29));
        assertTrue(m.put("key30", 30));
        assertTrue(m.put("key31", 31));
        assertTrue(m.put("key32", 32));
        assertTrue(m.put("key33", 33));
        assertTrue(m.put("key34", 34));
        assertTrue(m.put("key35", 35));
        assertTrue(m.put("key36", 36));
        assertTrue(m.put("key37", 37));
        assertTrue(m.put("key38", 38));
        assertTrue(m.put("key39", 39));
        assertTrue(m.put("key40", 40));
        assertTrue(m.put("key41", 41));
        assertTrue(m.put("key42", 42));
        assertTrue(m.put("key43", 43));
        assertTrue(m.put("key44", 44));
        assertTrue(m.put("key45", 45));
        assertTrue(m.put("key46", 46));
        assertTrue(m.put("key47", 47));
        assertTrue(m.put("key48", 48));
        assertTrue(m.put("key49", 49));
        assertTrue(m.put("key50", 50));
        assertTrue(m.put("key51", 51));
        assertTrue(m.put("key52", 52));
        assertTrue(m.put("key53", 53));
        assertTrue(m.put("key54", 54));
        assertTrue(m.put("key55", 55));
        assertTrue(m.put("key56", 56));
        assertTrue(m.put("key57", 57));
        assertTrue(m.put("key58", 58));
        assertTrue(m.put("key59", 59));
        assertTrue(m.put("key60", 60));
        assertTrue(m.put("key61", 61));
        assertTrue(m.put("key62", 62));
        assertTrue(m.put("key63", 63));
        assertTrue(m.put("key64", 64));
        assertTrue(m.put("key65", 65));
        assertTrue(m.put("key66", 66));
        assertTrue(m.put("key67", 67));
        assertTrue(m.put("key68", 68));
        assertTrue(m.put("key69", 69));
        assertTrue(m.put("key70", 70));
        assertTrue(m.put("key71", 71));
        assertTrue(m.put("key72", 72));
        assertTrue(m.put("key73", 73));
        assertTrue(m.put("key74", 74));
        assertTrue(m.put("key75", 75));
        assertTrue(m.put("key76", 76));
        assertTrue(m.put("key77", 77));
        assertTrue(m.put("key78", 78));
        assertTrue(m.put("key79", 79));
        assertTrue(m.put("key80", 80));
        assertTrue(m.put("key81", 81));
        assertTrue(m.put("key82", 82));
        assertTrue(m.put("key83", 83));
        assertTrue(m.put("key84", 84));
        assertTrue(m.put("key85", 85));
        assertTrue(m.put("key86", 86));
        assertTrue(m.put("key87", 87));
        assertTrue(m.put("key88", 88));
        assertTrue(m.put("key89", 89));
        assertTrue(m.put("key90", 90));
        assertTrue(m.put("key91", 91));
        assertTrue(m.put("key92", 92));
        assertTrue(m.put("key93", 93));
        assertTrue(m.put("key94", 94));
        assertTrue(m.put("key95", 95));
        assertTrue(m.put("key96", 96));
        assertTrue(m.put("key97", 97));
        assertTrue(m.put("key98", 98));
        assertTrue(m.put("key99", 99));
        assertTrue(m.put("key100", 100));
        assertTrue(m.put("key101", 101));
        assertTrue(m.put("key102", 102));
        assertTrue(m.put("key103", 103));
        assertTrue(m.put("key104", 104));
        assertTrue(m.put("key105", 105));
        assertTrue(m.put("key106", 106));
        assertTrue(m.put("key107", 107));
        assertTrue(m.put("key108", 108));
        assertTrue(m.put("key109", 109));
        assertTrue(m.put("key110", 110));
        assertTrue(m.put("key111", 111));
        assertTrue(m.put("key112", 112));
        assertTrue(m.put("key113", 113));
        assertTrue(m.put("key114", 114));
        assertTrue(m.put("key115", 115));
        assertTrue(m.put("key116", 116));
        assertTrue(m.put("key117", 117));
        assertTrue(m.put("key118", 118));
        assertTrue(m.put("key119", 119));
        assertTrue(m.put("key120", 120));
        assertTrue(m.put("key121", 121));
        assertTrue(m.put("key122", 122));
        assertTrue(m.put("key123", 123));
        assertTrue(m.put("key124", 124));
        assertTrue(m.put("key125", 125));
        assertTrue(m.put("key126", 126));
        assertTrue(m.put("key127", 127));
        assertTrue(m.put("key128", 128));
        assertTrue(m.put("key129", 129));
        assertTrue(m.put("key130", 130));
        assertTrue(m.put("key131", 131));
        assertTrue(m.put("key132", 132));
        assertTrue(m.put("key133", 133));
        assertTrue(m.put("key134", 134));
        assertTrue(m.put("key135", 135));
        assertTrue(m.put("key136", 136));
        assertTrue(m.put("key137", 137));
        assertTrue(m.put("key138", 138));
        assertTrue(m.put("key139", 139));
        assertTrue(m.put("key140", 140));
        assertTrue(m.put("key141", 141));
        assertTrue(m.put("key142", 142));
        assertTrue(m.put("key143", 143));
        assertTrue(m.put("key144", 144));
        assertTrue(m.put("key145", 145));
        assertTrue(m.put("key146", 146));
        assertTrue(m.put("key147", 147));
        assertTrue(m.put("key148", 148));
        assertTrue(m.put("key149", 149));
        assertTrue(m.put("key150", 150));
        assertTrue(m.put("key151", 151));
        assertTrue(m.put("key152", 152));
        assertTrue(m.put("key153", 153));
        assertTrue(m.put("key154", 154));
        assertTrue(m.put("key155", 155));
        assertTrue(m.put("key156", 156));
        assertTrue(m.put("key157", 157));
        assertTrue(m.put("key158", 158));
        assertTrue(m.put("key159", 159));
        assertTrue(m.put("key160", 160));
        assertTrue(m.put("key161", 161));
        assertTrue(m.put("key162", 162));
        assertTrue(m.put("key163", 163));
        assertTrue(m.put("key164", 164));
        assertTrue(m.put("key165", 165));
        assertTrue(m.put("key166", 166));
        assertTrue(m.put("key167", 167));
        assertTrue(m.put("key168", 168));
        assertTrue(m.put("key169", 169));
        assertTrue(m.put("key170", 170));
        assertTrue(m.put("key171", 171));
        assertTrue(m.put("key172", 172));
        assertTrue(m.put("key173", 173));
        assertTrue(m.put("key174", 174));
        assertTrue(m.put("key175", 175));
        assertTrue(m.put("key176", 176));
        assertTrue(m.put("key177", 177));
        assertTrue(m.put("key178", 178));
        assertTrue(m.put("key179", 179));
        assertTrue(m.put("key180", 180));
        assertTrue(m.put("key181", 181));
        assertTrue(m.put("key182", 182));
        assertTrue(m.put("key183", 183));
        assertTrue(m.put("key184", 184));
        assertTrue(m.put("key185", 185));
        assertTrue(m.put("key186", 186));
        assertTrue(m.put("key187", 187));
        assertTrue(m.put("key188", 188));
        assertTrue(m.put("key189", 189));
        assertTrue(m.put("key190", 190));
        assertTrue(m.put("key191", 191));
        assertTrue(m.put("key192", 192));
        assertTrue(m.put("key193", 193));
        assertTrue(m.put("key194", 194));
        assertTrue(m.put("key195", 195));
        assertTrue(m.put("key196", 196));
        assertTrue(m.put("key197", 197));
        assertTrue(m.put("key198", 198));
        assertTrue(m.put("key199", 199));
        assertTrue(m.put("key200", 200));
        assertTrue(m.put("key201", 201));
        assertTrue(m.put("key202", 202));
        assertTrue(m.put("key203", 203));
        assertTrue(m.put("key204", 204));
        assertTrue(m.put("key205", 205));
        assertTrue(m.put("key206", 206));
        assertTrue(m.put("key207", 207));
        assertTrue(m.put("key208", 208));
        assertTrue(m.put("key209", 209));
        assertTrue(m.put("key210", 210));
        assertTrue(m.put("key211", 211));
        assertTrue(m.put("key212", 212));
        assertTrue(m.put("key213", 213));
        assertTrue(m.put("key214", 214));
        assertTrue(m.put("key215", 215));
        assertTrue(m.put("key216", 216));
        assertTrue(m.put("key217", 217));
        assertTrue(m.put("key218", 218));
        assertTrue(m.put("key219", 219));
        assertTrue(m.put("key220", 220));
        assertTrue(m.put("key221", 221));
        assertTrue(m.put("key222", 222));
        assertTrue(m.put("key223", 223));
        assertTrue(m.put("key224", 224));
        assertTrue(m.put("key225", 225));
        assertTrue(m.put("key226", 226));
        assertTrue(m.put("key227", 227));
        assertTrue(m.put("key228", 228));
        assertTrue(m.put("key229", 229));
        assertTrue(m.put("key230", 230));
        assertTrue(m.put("key231", 231));
        assertTrue(m.put("key232", 232));
        assertTrue(m.put("key233", 233));
        assertTrue(m.put("key234", 234));
        assertTrue(m.put("key235", 235));
        assertTrue(m.put("key236", 236));
        assertTrue(m.put("key237", 237));
        assertTrue(m.put("key238", 238));
        assertTrue(m.put("key239", 239));
        assertTrue(m.put("key240", 240));
        assertTrue(m.put("key241", 241));
        assertTrue(m.put("key242", 242));
        assertTrue(m.put("key243", 243));
        assertTrue(m.put("key244", 244));
        assertTrue(m.put("key245", 245));
        assertTrue(m.put("key246", 246));
        assertTrue(m.put("key247", 247));
        assertTrue(m.put("key248", 248));
        assertTrue(m.put("key249", 249));
        assertTrue(m.put("key250", 250));
        
        assertTrue(m.tsize() > 101);
        assertNotEquals(m.get("q"), 1);
        assertFalse(m.containsKey("q"));

        m.put("hahaha", 88);
        m.replace("hahaha", 888);
        m.replace("a",  88);

        assertEquals(24, m.size());
        assertEquals(101, m.tsize());

        // output all, order is not defined
        UnorderedMap<?, ?>.Iterator it = m.iterator();
        int count = 0;
        while(it.hasNext() ){
            System.out.println(it.next().key.toString());
            count++;
        }
        assertEquals(24, count);

        // testing copy constructor
        System.out.println("copy constructor >>>>>>>>>>");
        UnorderedMap<String, Integer> m2 = new UnorderedMap<>(m);
        assertEquals(m.size(), m2.size());
        assertEquals(m.tsize(), m2.tsize());

        m2.put("wild", 999);
        m2.put("wildwest", 999);

        assertEquals(m.size() + 2, m2.size());

        it = m2.iterator();
        count = 0;
        while(it.hasNext()){
            System.out.println(it.next().key.toString());
            count++;
        }
        assertEquals(26, count);
    }
}
